<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
  <title>CORE/</title>
  <link rel="stylesheet" href="/css/navbar.css" />
  <link rel="stylesheet" href="/css/edit-experience.css" />
  <link rel="shortcut icon" href="/img/core.png" />
</head>

<body>
  <%- include('partials/navbar', { pagePath: 'edit-experience' }) %>
  <div class="edit-form-container">
    <h1>Edit Experience</h1>

    <h2>Job Experience</h2>
    <form id="jobExperienceForm">
      <div id="jobExperienceContainer"></div>
      <button type="button" class="regular-button" id="addJobExperience">Add Job Experience</button>
      <button type="submit" id="submit-button">Save Changes</button>
    </form>

    <template id="jobExperienceTemplate">
      <div class="jobExperience">
        <input type="hidden" name="id">
        <label for="title">Title:</label>
        <input type="text" name="title" required>

        <label for="employmentType">Employment Type:</label>
        <input type="text" name="employmentType" required>

        <label for="companyName">Company Name:</label>
        <input type="text" name="companyName" required>

        <label for="location">Location:</label>
        <input type="text" name="location" required>

        <label for="startDate">Start Date:</label>
        <input type="date" name="startDate" required>

        <label for="endDate">End Date:</label>
        <input type="date" name="endDate">

        <label for="description">Description:</label>
        <textarea name="description" required></textarea>

        <button type="button" class="removeJobExperience">Remove</button>
      </div>
    </template>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const jobExperienceContainer = document.getElementById('jobExperienceContainer');
      const addJobExperienceButton = document.getElementById('addJobExperience');
      const jobExperienceTemplate = document.getElementById('jobExperienceTemplate');
      const jobExperienceForm = document.getElementById('jobExperienceForm');

      function addExperience(experienceData = {}) {
        const newExperience = jobExperienceTemplate.content.cloneNode(true);
        const experienceFields = newExperience.querySelectorAll('input, textarea');
        experienceFields.forEach(field => {
          let value = experienceData[field.name] || '';
          if (field.type === 'date' && value) {
            value = new Date(value).toISOString().split('T')[0];
          }
          field.value = value;
        });
        const removeButton = newExperience.querySelector('.removeJobExperience');
        removeButton.addEventListener('click', function() {
          newExperience.remove();
        });
        jobExperienceContainer.appendChild(newExperience);
      }

      addJobExperienceButton.addEventListener('click', function() {
        addExperience();
      });

      const userID = '<%= user.id %>';
      fetch(`/api/job-experience/${userID}`)
        .then(response => response.json())
        .then(data => {
          data.forEach(experience => {
            console.log('Experience:', experience);
            addExperience(experience);
          });
        })
        .catch(error => {
          console.error('Error fetching job experience data:', error);
        });

      jobExperienceForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const formData = new FormData(jobExperienceForm);
        const experiences = [];

        const experienceDivs = jobExperienceContainer.querySelectorAll('.jobExperience');
        experienceDivs.forEach(div => {
          const experience = {};
          div.querySelectorAll('input, textarea').forEach(field => {
            experience[field.name] = field.value;
          });
          experiences.push(experience);
        });

        fetch('/jobs/update-experiences', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              experiences
            })
          })
          .then(response => {
            if (response.ok) {
              return response.json();
            }
            throw new Error('Network response was not ok.');
          })
          .then(data => {
            console.log('Success:', data);
          })
          .catch(error => {
            console.error('Error:', error);
          });
      });
    });
  </script>
</body>

</html>