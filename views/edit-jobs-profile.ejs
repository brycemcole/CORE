<!DOCTYPE html>
<html>

<head>
  <title>Edit Company</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
  <link rel="shortcut icon" href="/img/core.png" />
  <link rel="stylesheet" href="/css/navbar.css" />
  <link rel="stylesheet" href="/css/edit-company.css" />
  <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
</head>

<body>
  <%- include('partials/navbar', { pagePath: '' }) %>

  <main>
    <div class="edit-company-header">
    </div>
    <form action="/profile/jobs" method="POST">
      <div>
        <label class="secondary-text" for="jobPreferredTitle">Job Title:</label>
        <select class="title-select2" id="jobPreferredTitle" name="jobPreferredTitle[]" multiple="multiple">
        </select>
      </div>
      <div>
        <label class="secondary-text" for="jobExperienceLevel">Experience Level:</label>
        <select class="experience-select2" id="jobExperienceLevel" name="jobExperienceLevel[]" multiple="multiple"></select>
      </div>
      <div>
        <label class="secondary-text" for="jobPreferredLocation">Location:</label>
        <select class="location-select2" id="jobPreferredLocation" name="jobPreferredLocation[]" multiple="multiple">
        </select>
      </div>
      <div>
        <label class="secondary-text" for="jobPreferredSkills">Job Skills:</label>
        <select class="skills-select2" type="text" id="jobPreferredSkills" name="jobPreferredSkills[]" multiple="multiple">
        </select>
      </div>
      <div>
        <label class="secondary-text" for="jobPreferredSalary">Preferred Salary (USD $)</label>
        <input type="number" id="jobPreferredSalary" name="jobPreferredSalary">
      </div>
      <div>
        <label class="secondary-text" for="jobPreferredIndustry">Industry:</label>
        <input type="text" id="jobPreferredIndustry" name="jobPreferredIndustry">
      </div>
      <button class="submit-button" type="submit">Update Profile</button>
    </form>
  </main>
  <script>
    $(document).ready(function() {
      $('#subtitle').hide();
      $('#subtitle2').hide();


      $('.skills-select2').select2({
        width: '100%', // Full width of its container
        tags: true, // Allows user to create new tags
        placeholder: "Select preferred job skills",
        tokenSeparators: [',', ' '] // Optional: Defines separators for tokenization
      });

      $('.experience-select2').select2({
        width: '100%', // Full width of its container
        tags: true, // Allows user to create new tags
        placeholder: "Select experience levels",
        tokenSeparators: [',', ' '] // Optional: Defines separators for tokenization
      });

      $('.title-select2').select2({
        width: '100%', // Full width of its container
        tags: true, // Allows user to create new tags
        placeholder: "Select preferred job titles",
        tokenSeparators: [',', ' '] // Optional: Defines separators for tokenization
      });

      $('.location-select2').select2({
        width: '100%', // Full width of its container
        tags: true, // Allows user to create new tags
        placeholder: "Select preferred job locations",
        tokenSeparators: [',', ' '] // Optional: Defines separators for tokenization
      });
    });


    document.addEventListener("DOMContentLoaded", function() {
      const experienceSelect = document.getElementsByClassName('experience-select2')[0];
      const titleSelect = document.getElementsByClassName('title-select2')[0];
      const locationSelect = document.getElementsByClassName('location-select2')[0];
      const skillsSelect = document.getElementsByClassName('skills-select2')[0];

      // fetch skills
      fetch('/api/skills')
        .then(response => response.json())
        .then(data => {
          data.forEach(skill => {
            const option = document.createElement('option');
            option.value = skill.id;
            option.text = skill.tagName;
            skillsSelect.appendChild(option);
          });
        });


      const stateMappings = {
        Alabama: "AL",
        Alaska: "AK",
        Arizona: "AZ",
        Arkansas: "AR",
        California: "CA",
        Colorado: "CO",
        Connecticut: "CT",
        Delaware: "DE",
        Florida: "FL",
        Georgia: "GA",
        Hawaii: "HI",
        Idaho: "ID",
        Illinois: "IL",
        Indiana: "IN",
        Iowa: "IA",
        Kansas: "KS",
        Kentucky: "KY",
        Louisiana: "LA",
        Maine: "ME",
        Maryland: "MD",
        Massachusetts: "MA",
        Michigan: "MI",
        Minnesota: "MN",
        Mississippi: "MS",
        Missouri: "MO",
        Montana: "MT",
        Nebraska: "NE",
        Nevada: "NV",
        "New Hampshire": "NH",
        "New Jersey": "NJ",
        "New Mexico": "NM",
        "New York": "NY",
        "North Carolina": "NC",
        "North Dakota": "ND",
        Ohio: "OH",
        Oklahoma: "OK",
        Oregon: "OR",
        Pennsylvania: "PA",
        "Rhode Island": "RI",
        "South Carolina": "SC",
        "South Dakota": "SD",
        Tennessee: "TN",
        Texas: "TX",
        Utah: "UT",
        Vermont: "VT",
        Virginia: "VA",
        Washington: "WA",
        "West Virginia": "WV",
        Wisconsin: "WI",
        Wyoming: "WY",
        "United States": "US",
      };

      Object.entries(stateMappings).forEach(([state, abbr]) => {
        const option = document.createElement('option');
        option.value = abbr;
        option.text = state;
        locationSelect.appendChild(option);
      });

      const jobLevels = [
        "Internship",
        "Entry Level",
        "Mid Level",
        "Senior",
        "Lead",
        "Manager",
        "Director",
        "VP",
      ];

      const techRelatedTitles = [
        "software engineer",
        "data engineer",
        "project manager",
        "developer",
        "programmer",
        "analyst",
        "consultant",
        "data scientist",
        "machine learning engineer",
        "ai specialist",
        "web developer",
        "frontend developer",
        "backend developer",
        "full stack developer",
        "systems engineer",
        "network engineer",
        "security engineer",
        "database administrator",
        "devops engineer",
        "cloud engineer",
        "site reliability engineer",
        "mobile developer",
        "application developer",
        "blockchain developer",
        "cybersecurity analyst",
        "IT support specialist",
        "technical support engineer",
        "quality assurance engineer",
        "test engineer",
        "UX/UI designer",
        "product manager",
        "scrum master",
        "business analyst",
        "solutions architect",
        "data analyst",
        "big data engineer",
        "BI developer",
        "ETL developer",
        "data warehouse engineer",
        "robotics engineer",
        "IoT engineer",
        "embedded systems engineer",
        "game developer",
        "VR/AR developer",
        "data architect",
        "technical writer",
        "hardware engineer",
        "IT consultant",
        "systems administrator",
        "ai",
        "data science",
        "analytics",
        "platform engineer",
        "ml engineer",
        "technical program manager",
      ];

      jobLevels.forEach(level => {
        const option = document.createElement('option');
        option.value = level;
        option.text = level;
        experienceSelect.appendChild(option);
      });

      techRelatedTitles.forEach(title => {
        const option = document.createElement('option');
        option.value = title;
        option.text = title;
        titleSelect.appendChild(option);
      });

      // fill in the form with the user's data
      fetch('/api/profile/jobs?userId=<%= user.id %>')
        .then(response => response.json())
        .then(data => {
          console.log(data);
          /* example of object
          
          {
          "jobPreferredTitle": "software engineer,data engineer",
          "jobPreferredSkills": "2",
          "jobPreferredLocation": "NY",
          "jobExperienceLevel": "Internship",
          "jobPreferredIndustry": "",
          "jobPreferredSalary": 0
          }
          */
          if (data) {
            let {
              jobPreferredTitle,
              jobExperienceLevel,
              jobPreferredLocation,
              jobPreferredSkills,
              jobPreferredSalary,
              jobPreferredIndustry
            } = data;
            // jobPreferredTitle is an csv string
            let jobPreferredTitleArray = jobPreferredTitle.split(',');
            jobExperienceLevel = jobExperienceLevel.split(',');
            jobPreferredLocation = jobPreferredLocation.split(',');
            jobPreferredSkills = jobPreferredSkills.split(',');

            $('.title-select2').val(jobPreferredTitleArray).trigger('change');
            $('.experience-select2').val(jobExperienceLevel).trigger('change');
            $('.location-select2').val(jobPreferredLocation).trigger('change');
            $('.skills-select2').val(jobPreferredSkills).trigger('change');

            jobPreferredLocation.forEach(location => {
              const option = document.createElement('option');
              option.value = location;
              option.text = location
              locationSelect.appendChild(option);
            });

            jobPreferredSkills.forEach(skill => {
              const option = document.createElement('option');
              option.value = skill;
              option.text = skill;
              skillsSelect.appendChild(option);
            });



            document.getElementById('jobPreferredSalary').value = jobPreferredSalary;
            document.getElementById('jobPreferredIndustry').value = jobPreferredIndustry;
          }
        });
    });
  </script>
</body>

</html>